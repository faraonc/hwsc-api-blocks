// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authority.proto

package lib

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Secret is used for hashing.
type Secret struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	CreatedTimestamp     int64    `protobuf:"varint,2,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Secret) Reset()         { *m = Secret{} }
func (m *Secret) String() string { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()    {}
func (*Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a5a0640cd66a638, []int{0}
}

func (m *Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secret.Unmarshal(m, b)
}
func (m *Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secret.Marshal(b, m, deterministic)
}
func (m *Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secret.Merge(m, src)
}
func (m *Secret) XXX_Size() int {
	return xxx_messageInfo_Secret.Size(m)
}
func (m *Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Secret proto.InternalMessageInfo

func (m *Secret) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Secret) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

// Identification is used for communicating between services.
type Identification struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Secret               *Secret  `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Identification) Reset()         { *m = Identification{} }
func (m *Identification) String() string { return proto.CompactTextString(m) }
func (*Identification) ProtoMessage()    {}
func (*Identification) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a5a0640cd66a638, []int{1}
}

func (m *Identification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identification.Unmarshal(m, b)
}
func (m *Identification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identification.Marshal(b, m, deterministic)
}
func (m *Identification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identification.Merge(m, src)
}
func (m *Identification) XXX_Size() int {
	return xxx_messageInfo_Identification.Size(m)
}
func (m *Identification) XXX_DiscardUnknown() {
	xxx_messageInfo_Identification.DiscardUnknown(m)
}

var xxx_messageInfo_Identification proto.InternalMessageInfo

func (m *Identification) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Identification) GetSecret() *Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

func init() {
	proto.RegisterType((*Secret)(nil), "lib.Secret")
	proto.RegisterType((*Identification)(nil), "lib.Identification")
}

func init() { proto.RegisterFile("authority.proto", fileDescriptor_6a5a0640cd66a638) }

var fileDescriptor_6a5a0640cd66a638 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0x41, 0x4b, 0x86, 0x40,
	0x10, 0x86, 0x31, 0x49, 0x68, 0x3f, 0x28, 0x5b, 0x3a, 0x78, 0x14, 0x3b, 0x64, 0x84, 0x2b, 0xd4,
	0x3f, 0xe8, 0x12, 0xd1, 0xcd, 0x3a, 0x75, 0x89, 0xdd, 0x75, 0xd2, 0xc1, 0xd5, 0x91, 0xdd, 0x91,
	0xf0, 0xdf, 0x47, 0x6a, 0xb7, 0x77, 0xe6, 0x81, 0x67, 0xe6, 0x15, 0x57, 0x7a, 0xe1, 0x9e, 0x3c,
	0xf2, 0xaa, 0x66, 0x4f, 0x4c, 0x32, 0x76, 0x68, 0x8a, 0x17, 0x91, 0xbc, 0x83, 0xf5, 0xc0, 0x32,
	0x15, 0xf1, 0x00, 0x6b, 0x16, 0xe5, 0x51, 0x79, 0xd1, 0xfc, 0x45, 0xf9, 0x20, 0xae, 0xad, 0x07,
	0xcd, 0xd0, 0x7e, 0x31, 0x8e, 0x10, 0x58, 0x8f, 0x73, 0x76, 0x96, 0x47, 0x65, 0xdc, 0xa4, 0x07,
	0xf8, 0xf8, 0xdf, 0x17, 0x6f, 0xe2, 0xf2, 0xb5, 0x85, 0x89, 0xf1, 0x1b, 0xad, 0x66, 0xa4, 0x49,
	0xde, 0x88, 0x73, 0xa6, 0x01, 0xa6, 0x43, 0xb9, 0x0f, 0xf2, 0x56, 0x24, 0x61, 0x3b, 0xb8, 0x99,
	0x4e, 0x8f, 0x27, 0xe5, 0xd0, 0xa8, 0xfd, 0x87, 0xe6, 0x40, 0xcf, 0xf7, 0x9f, 0x77, 0x1d, 0x72,
	0xbf, 0x18, 0x65, 0x69, 0xac, 0xfb, 0x9f, 0x60, 0x2b, 0xf2, 0xdd, 0x1e, 0xf4, 0x8c, 0x95, 0x71,
	0x64, 0x87, 0x50, 0x3b, 0x34, 0x26, 0xd9, 0xca, 0x3c, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x92,
	0xa5, 0x13, 0xf5, 0xdf, 0x00, 0x00, 0x00,
}
