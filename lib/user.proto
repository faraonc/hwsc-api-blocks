syntax="proto3";

package hwsc;

// map:
// key = friend's uuid
// value = this can be anything, helps O(1) lookup time for deletion and updating
message UserDocumentMetadata {
    // @inject_tag: bson:"isPublic"
    bool is_public = 1;
    // @inject_tag: bson:"sharedWith"
    map<string, bool> shared_with = 2;
}

// map:
// key = friend's duid
// value = this can be anything, helps O(1) lookup time for deletion and updating
message UserFriendMetadata {
    // @inject_tag: bson:"sharedDuidToMe"
    map<string, bool> shared_duid_to_me = 1;
}

message User {
    // @inject_tag: bson:"uuid" db:"uuid"
    string uuid = 1;
    // @inject_tag: bson:"firstName" db:"first_name"
    string first_name = 2;
    // @inject_tag: bson:"lastName" db:"last_name"
    string last_name = 3;
    // @inject_tag: bson:"email" db:"email"
    string email = 4;
    // @inject_tag: bson:"password" db:"password"
    string password = 5;
    // @inject_tag: bson:"organization" db:"organization"
    string organization = 6;
    // @inject_tag: bson:"userDocuments"
    map<string, UserDocumentMetadata> user_documents = 7; // track this field (key = duid)
    // @inject_tag: bson:"sharedToMe"
    map<string, UserFriendMetadata> shared_to_me = 8; // key = friends uuid
    // @inject_tag: bson:"createdDate" db:"created_date"
    int64 created_date = 9;
    // @inject_tag: bson:"isVerified" db:"is_verified"
    bool is_verified = 10;
}
