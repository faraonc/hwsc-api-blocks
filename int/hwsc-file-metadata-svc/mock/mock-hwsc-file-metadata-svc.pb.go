// Code generated by MockGen. DO NOT EDIT.
// Source: ./int/hwsc-file-metadata-svc/proto/hwsc-file-metadata-svc.pb.go

// Package mock_hwscFileMetadataSvcPb is a generated GoMock package.
package mock_hwscFileMetadataSvcPb

import (
	x "."
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockisFileMetadataResponse_Status is a mock of isFileMetadataResponse_Status interface
type MockisFileMetadataResponse_Status struct {
	ctrl     *gomock.Controller
	recorder *MockisFileMetadataResponse_StatusMockRecorder
}

// MockisFileMetadataResponse_StatusMockRecorder is the mock recorder for MockisFileMetadataResponse_Status
type MockisFileMetadataResponse_StatusMockRecorder struct {
	mock *MockisFileMetadataResponse_Status
}

// NewMockisFileMetadataResponse_Status creates a new mock instance
func NewMockisFileMetadataResponse_Status(ctrl *gomock.Controller) *MockisFileMetadataResponse_Status {
	mock := &MockisFileMetadataResponse_Status{ctrl: ctrl}
	mock.recorder = &MockisFileMetadataResponse_StatusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockisFileMetadataResponse_Status) EXPECT() *MockisFileMetadataResponse_StatusMockRecorder {
	return m.recorder
}

// isFileMetadataResponse_Status mocks base method
func (m *MockisFileMetadataResponse_Status) isFileMetadataResponse_Status() {
	m.ctrl.Call(m, "isFileMetadataResponse_Status")
}

// isFileMetadataResponse_Status indicates an expected call of isFileMetadataResponse_Status
func (mr *MockisFileMetadataResponse_StatusMockRecorder) isFileMetadataResponse_Status() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isFileMetadataResponse_Status", reflect.TypeOf((*MockisFileMetadataResponse_Status)(nil).isFileMetadataResponse_Status))
}

// MockFileMetadataServiceClient is a mock of FileMetadataServiceClient interface
type MockFileMetadataServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockFileMetadataServiceClientMockRecorder
}

// MockFileMetadataServiceClientMockRecorder is the mock recorder for MockFileMetadataServiceClient
type MockFileMetadataServiceClientMockRecorder struct {
	mock *MockFileMetadataServiceClient
}

// NewMockFileMetadataServiceClient creates a new mock instance
func NewMockFileMetadataServiceClient(ctrl *gomock.Controller) *MockFileMetadataServiceClient {
	mock := &MockFileMetadataServiceClient{ctrl: ctrl}
	mock.recorder = &MockFileMetadataServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileMetadataServiceClient) EXPECT() *MockFileMetadataServiceClientMockRecorder {
	return m.recorder
}

// GetStatus mocks base method
func (m *MockFileMetadataServiceClient) GetStatus(ctx context.Context, in *x.FileMetadataRequest, opts ...grpc.CallOption) (*x.FileMetadataResponse, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetStatus", varargs...)
	ret0, _ := ret[0].(*x.FileMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatus indicates an expected call of GetStatus
func (mr *MockFileMetadataServiceClientMockRecorder) GetStatus(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockFileMetadataServiceClient)(nil).GetStatus), varargs...)
}

// CreateFileMetadata mocks base method
func (m *MockFileMetadataServiceClient) CreateFileMetadata(ctx context.Context, in *x.FileMetadataRequest, opts ...grpc.CallOption) (*x.FileMetadataResponse, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateFileMetadata", varargs...)
	ret0, _ := ret[0].(*x.FileMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFileMetadata indicates an expected call of CreateFileMetadata
func (mr *MockFileMetadataServiceClientMockRecorder) CreateFileMetadata(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileMetadata", reflect.TypeOf((*MockFileMetadataServiceClient)(nil).CreateFileMetadata), varargs...)
}

// MockFileMetadataServiceServer is a mock of FileMetadataServiceServer interface
type MockFileMetadataServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockFileMetadataServiceServerMockRecorder
}

// MockFileMetadataServiceServerMockRecorder is the mock recorder for MockFileMetadataServiceServer
type MockFileMetadataServiceServerMockRecorder struct {
	mock *MockFileMetadataServiceServer
}

// NewMockFileMetadataServiceServer creates a new mock instance
func NewMockFileMetadataServiceServer(ctrl *gomock.Controller) *MockFileMetadataServiceServer {
	mock := &MockFileMetadataServiceServer{ctrl: ctrl}
	mock.recorder = &MockFileMetadataServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileMetadataServiceServer) EXPECT() *MockFileMetadataServiceServerMockRecorder {
	return m.recorder
}

// GetStatus mocks base method
func (m *MockFileMetadataServiceServer) GetStatus(arg0 context.Context, arg1 *x.FileMetadataRequest) (*x.FileMetadataResponse, error) {
	ret := m.ctrl.Call(m, "GetStatus", arg0, arg1)
	ret0, _ := ret[0].(*x.FileMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatus indicates an expected call of GetStatus
func (mr *MockFileMetadataServiceServerMockRecorder) GetStatus(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockFileMetadataServiceServer)(nil).GetStatus), arg0, arg1)
}

// CreateFileMetadata mocks base method
func (m *MockFileMetadataServiceServer) CreateFileMetadata(arg0 context.Context, arg1 *x.FileMetadataRequest) (*x.FileMetadataResponse, error) {
	ret := m.ctrl.Call(m, "CreateFileMetadata", arg0, arg1)
	ret0, _ := ret[0].(*x.FileMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFileMetadata indicates an expected call of CreateFileMetadata
func (mr *MockFileMetadataServiceServerMockRecorder) CreateFileMetadata(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileMetadata", reflect.TypeOf((*MockFileMetadataServiceServer)(nil).CreateFileMetadata), arg0, arg1)
}
