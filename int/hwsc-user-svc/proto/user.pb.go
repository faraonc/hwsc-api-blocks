// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package hwscUserSvcPb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// map:
// key = friend's uuid
// value = this can be anything, helps O(1) lookup time for deletion and updating
type UserDocumentMetadata struct {
	// @inject_tag: bson:"isPublic"
	IsPublic bool `protobuf:"varint,1,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty" bson:"isPublic"`
	// @inject_tag: bson:"sharedWith"
	SharedWith           map[string]bool `protobuf:"bytes,2,rep,name=shared_with,json=sharedWith,proto3" json:"shared_with,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" bson:"sharedWith"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *UserDocumentMetadata) Reset()         { *m = UserDocumentMetadata{} }
func (m *UserDocumentMetadata) String() string { return proto.CompactTextString(m) }
func (*UserDocumentMetadata) ProtoMessage()    {}
func (*UserDocumentMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserDocumentMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDocumentMetadata.Unmarshal(m, b)
}
func (m *UserDocumentMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDocumentMetadata.Marshal(b, m, deterministic)
}
func (m *UserDocumentMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDocumentMetadata.Merge(m, src)
}
func (m *UserDocumentMetadata) XXX_Size() int {
	return xxx_messageInfo_UserDocumentMetadata.Size(m)
}
func (m *UserDocumentMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDocumentMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UserDocumentMetadata proto.InternalMessageInfo

func (m *UserDocumentMetadata) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *UserDocumentMetadata) GetSharedWith() map[string]bool {
	if m != nil {
		return m.SharedWith
	}
	return nil
}

// map:
// key = friend's duid
// value = this can be anything, helps O(1) lookup time for deletion and updating
type UserFriendMetadata struct {
	// @inject_tag: bson:"sharedDuidToMe"
	SharedDuidToMe       map[string]bool `protobuf:"bytes,1,rep,name=shared_duid_to_me,json=sharedDuidToMe,proto3" json:"shared_duid_to_me,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" bson:"sharedDuidToMe"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *UserFriendMetadata) Reset()         { *m = UserFriendMetadata{} }
func (m *UserFriendMetadata) String() string { return proto.CompactTextString(m) }
func (*UserFriendMetadata) ProtoMessage()    {}
func (*UserFriendMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserFriendMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFriendMetadata.Unmarshal(m, b)
}
func (m *UserFriendMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFriendMetadata.Marshal(b, m, deterministic)
}
func (m *UserFriendMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFriendMetadata.Merge(m, src)
}
func (m *UserFriendMetadata) XXX_Size() int {
	return xxx_messageInfo_UserFriendMetadata.Size(m)
}
func (m *UserFriendMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFriendMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UserFriendMetadata proto.InternalMessageInfo

func (m *UserFriendMetadata) GetSharedDuidToMe() map[string]bool {
	if m != nil {
		return m.SharedDuidToMe
	}
	return nil
}

type User struct {
	// @inject_tag: bson:"uuid"
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty" bson:"uuid"`
	// @inject_tag: bson:"firstName"
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty" bson:"firstName"`
	// @inject_tag: bson:"lastName"
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty" bson:"lastName"`
	// @inject_tag: bson:"email"
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty" bson:"email"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty" bson:"password"`
	// @inject_tag: bson:"organization"
	Organization string `protobuf:"bytes,6,opt,name=organization,proto3" json:"organization,omitempty" bson:"organization"`
	// @inject_tag: bson:"userDocuments"
	UserDocuments map[string]*UserDocumentMetadata `protobuf:"bytes,7,rep,name=user_documents,json=userDocuments,proto3" json:"user_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"userDocuments"`
	// @inject_tag: bson:"sharedToMe"
	SharedToMe           map[string]*UserFriendMetadata `protobuf:"bytes,8,rep,name=shared_to_me,json=sharedToMe,proto3" json:"shared_to_me,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"sharedToMe"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-" bson:"-"`
	XXX_unrecognized     []byte                         `json:"-" bson:"-"`
	XXX_sizecache        int32                          `json:"-" bson:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *User) GetUserDocuments() map[string]*UserDocumentMetadata {
	if m != nil {
		return m.UserDocuments
	}
	return nil
}

func (m *User) GetSharedToMe() map[string]*UserFriendMetadata {
	if m != nil {
		return m.SharedToMe
	}
	return nil
}

func init() {
	proto.RegisterType((*UserDocumentMetadata)(nil), "hwsc.UserDocumentMetadata")
	proto.RegisterMapType((map[string]bool)(nil), "hwsc.UserDocumentMetadata.SharedWithEntry")
	proto.RegisterType((*UserFriendMetadata)(nil), "hwsc.UserFriendMetadata")
	proto.RegisterMapType((map[string]bool)(nil), "hwsc.UserFriendMetadata.SharedDuidToMeEntry")
	proto.RegisterType((*User)(nil), "hwsc.User")
	proto.RegisterMapType((map[string]*UserFriendMetadata)(nil), "hwsc.User.SharedToMeEntry")
	proto.RegisterMapType((map[string]*UserDocumentMetadata)(nil), "hwsc.User.UserDocumentsEntry")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0xca, 0xd3, 0x40,
	0x14, 0x25, 0x4d, 0x5a, 0x93, 0xdb, 0x5a, 0x75, 0xec, 0x62, 0x88, 0x14, 0x4a, 0x57, 0x45, 0x24,
	0x88, 0x6e, 0x44, 0x74, 0x21, 0x54, 0x37, 0x52, 0x91, 0xa8, 0x74, 0x23, 0x84, 0x69, 0x67, 0x34,
	0x83, 0x49, 0xa6, 0xcc, 0x8f, 0xa5, 0x3e, 0x95, 0x6f, 0xe0, 0xe3, 0xf8, 0x1a, 0x92, 0x99, 0xb4,
	0x4d, 0x4a, 0xfd, 0xe0, 0xdb, 0xe5, 0xde, 0x33, 0xf7, 0xdc, 0xc3, 0x39, 0x37, 0x00, 0x46, 0x31,
	0x99, 0xec, 0xa4, 0xd0, 0x02, 0x05, 0xf9, 0x5e, 0x6d, 0xe7, 0x7f, 0x3c, 0x98, 0x7c, 0x51, 0x4c,
	0x2e, 0xc5, 0xd6, 0x94, 0xac, 0xd2, 0x2b, 0xa6, 0x09, 0x25, 0x9a, 0xa0, 0x47, 0x10, 0x71, 0x95,
	0xed, 0xcc, 0xa6, 0xe0, 0x5b, 0xec, 0xcd, 0xbc, 0x45, 0x98, 0x86, 0x5c, 0x7d, 0xb4, 0x35, 0x7a,
	0x0f, 0x43, 0x95, 0x13, 0xc9, 0x68, 0xb6, 0xe7, 0x3a, 0xc7, 0xbd, 0x99, 0xbf, 0x18, 0x3e, 0x7b,
	0x9c, 0xd4, 0x8c, 0xc9, 0x35, 0xb6, 0xe4, 0x93, 0x7d, 0xbd, 0xe6, 0x3a, 0x7f, 0x5b, 0x69, 0x79,
	0x48, 0x41, 0x9d, 0x1a, 0xf1, 0x6b, 0xb8, 0x77, 0x01, 0xa3, 0xfb, 0xe0, 0xff, 0x60, 0x07, 0xbb,
	0x36, 0x4a, 0xeb, 0x4f, 0x34, 0x81, 0xfe, 0x4f, 0x52, 0x18, 0x86, 0x7b, 0x56, 0x8a, 0x2b, 0x5e,
	0xf6, 0x5e, 0x78, 0xf3, 0xdf, 0x1e, 0xa0, 0x7a, 0xe7, 0x3b, 0xc9, 0x59, 0x45, 0x4f, 0xfa, 0xd7,
	0xf0, 0xa0, 0x91, 0x48, 0x0d, 0xa7, 0x99, 0x16, 0x59, 0xc9, 0xb0, 0x67, 0x85, 0x3e, 0x39, 0x0b,
	0xed, 0x0e, 0x35, 0x32, 0x97, 0x86, 0xd3, 0xcf, 0x62, 0xc5, 0x9c, 0xd4, 0xb1, 0xea, 0x34, 0xe3,
	0x37, 0xf0, 0xf0, 0xca, 0xb3, 0x5b, 0x49, 0xfe, 0xeb, 0x43, 0x50, 0x6f, 0x47, 0x08, 0x02, 0x63,
	0x38, 0x6d, 0xa6, 0xec, 0x37, 0x9a, 0x02, 0x7c, 0xe3, 0x52, 0xe9, 0xac, 0x22, 0xa5, 0x9b, 0x8d,
	0xd2, 0xc8, 0x76, 0x3e, 0x90, 0x92, 0xd5, 0xb9, 0x14, 0xe4, 0x88, 0xfa, 0x16, 0x0d, 0xeb, 0x86,
	0x05, 0x27, 0xd0, 0x67, 0x25, 0xe1, 0x05, 0x0e, 0x2c, 0xe0, 0x0a, 0x14, 0x43, 0xb8, 0x23, 0x4a,
	0xed, 0x85, 0xa4, 0xb8, 0xef, 0x26, 0x8e, 0x35, 0x9a, 0xc3, 0x48, 0xc8, 0xef, 0xa4, 0xe2, 0xbf,
	0x88, 0xe6, 0xa2, 0xc2, 0x03, 0x8b, 0x77, 0x7a, 0x68, 0x09, 0xe3, 0xfa, 0x6e, 0x32, 0xda, 0xa4,
	0xaa, 0xf0, 0x1d, 0xeb, 0xe3, 0xf4, 0xec, 0x63, 0x27, 0x75, 0xe5, 0x8c, 0xbb, 0x6b, 0xda, 0x3d,
	0xf4, 0x0a, 0x46, 0x4d, 0x20, 0x2e, 0x8b, 0xd0, 0x72, 0xc4, 0x2d, 0x0e, 0x67, 0xeb, 0xd9, 0xf9,
	0xe6, 0x48, 0xac, 0xeb, 0x5f, 0x5d, 0xc8, 0xdd, 0x15, 0x57, 0x4c, 0x7f, 0xda, 0x36, 0xbd, 0x43,
	0x7f, 0x79, 0x93, 0xad, 0x40, 0xe2, 0xf5, 0xf1, 0x04, 0x6f, 0xca, 0x33, 0xe9, 0x52, 0xe3, 0xff,
	0x5d, 0x51, 0x8b, 0x78, 0x33, 0xb0, 0xff, 0xda, 0xf3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3c,
	0x37, 0xa1, 0x09, 0x79, 0x03, 0x00, 0x00,
}
